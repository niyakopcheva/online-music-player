{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\online-music-player\\\\client\\\\src\\\\components\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPage() {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const auth = getAuth();\n  useEffect(() => {\n    const checkRole = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        console.log('User found:', user.uid);\n        try {\n          const idTokenResult = await user.getIdToken(true); // Force refresh\n          console.log('Custom claims:', idTokenResult.claims);\n          setIsAdmin(idTokenResult.claims.role === 'admin');\n        } catch (error) {\n          console.error('Error fetching ID token:', error);\n        }\n      } else {\n        console.log('No user is signed in.');\n      }\n      setLoading(false); // Ensure loading is updated\n    };\n    checkRole();\n  }, [auth]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this); // Avoid rendering before claims are verified\n  }\n  if (!isAdmin) {\n    alert(\"You do NOT have access to this page!\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Welcome to the Admin Page!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n_s(AdminPage, \"6KDdLcDigPmSwSkIdwKPRNzyNvM=\");\n_c = AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["useEffect","useState","getAuth","Navigate","jsxDEV","_jsxDEV","AdminPage","_s","isAdmin","setIsAdmin","loading","setLoading","auth","checkRole","user","currentUser","console","log","uid","idTokenResult","getIdToken","claims","role","error","children","fileName","_jsxFileName","lineNumber","columnNumber","alert","to","_c","$RefreshReg$"],"sources":["D:/Documents/online-music-player/client/src/components/AdminPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport default function AdminPage() {\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const auth = getAuth();\r\n\r\n    useEffect(() => {\r\n        const checkRole = async () => {\r\n            const user = auth.currentUser;\r\n            if (user) {\r\n                console.log('User found:', user.uid);\r\n                try {\r\n                    const idTokenResult = await user.getIdToken(true); // Force refresh\r\n                    console.log('Custom claims:', idTokenResult.claims);\r\n                    setIsAdmin(idTokenResult.claims.role === 'admin');\r\n                } catch (error) {\r\n                    console.error('Error fetching ID token:', error);\r\n                }\r\n            } else {\r\n                console.log('No user is signed in.');\r\n            }\r\n            setLoading(false); // Ensure loading is updated\r\n        };\r\n        checkRole();\r\n    }, [auth]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Avoid rendering before claims are verified\r\n    }\r\n\r\n    if (!isAdmin) {\r\n        alert(\"You do NOT have access to this page!\");\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    return <div>Welcome to the Admin Page!</div>;\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMW,IAAI,GAAGV,OAAO,CAAC,CAAC;EAEtBF,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,IAAI,GAAGF,IAAI,CAACG,WAAW;MAC7B,IAAID,IAAI,EAAE;QACNE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,IAAI,CAACI,GAAG,CAAC;QACpC,IAAI;UACA,MAAMC,aAAa,GAAG,MAAML,IAAI,CAACM,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;UACnDJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,aAAa,CAACE,MAAM,CAAC;UACnDZ,UAAU,CAACU,aAAa,CAACE,MAAM,CAACC,IAAI,KAAK,OAAO,CAAC;QACrD,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZP,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD;MACJ,CAAC,MAAM;QACHP,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACxC;MACAN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC;IACDE,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,IAAIF,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAmB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,IAAI,CAACpB,OAAO,EAAE;IACVqB,KAAK,CAAC,sCAAsC,CAAC;IAC7C,oBAAOxB,OAAA,CAACF,QAAQ;MAAC2B,EAAE,EAAC;IAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;EAEA,oBAAOvB,OAAA;IAAAmB,QAAA,EAAK;EAA0B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAChD;AAACrB,EAAA,CAnCuBD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}