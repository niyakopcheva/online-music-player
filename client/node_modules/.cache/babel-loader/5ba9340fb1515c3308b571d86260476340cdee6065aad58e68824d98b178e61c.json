{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\online-music-player\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport getArtistName from './queries/getArtistName';\nimport getProfilePic from './queries/getProfilePic';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/artists\").then(res => res.json()).then(data => setArtists(data));\n    fetch(\"http://localhost:5000/songs\").then(res => res.json()).then(data => setSongs(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: \"Rou\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: getProfilePic(artists, song.artist_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), \" \", getArtistName(artists, song.artist_id), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 111\n            }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              autoplay: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: song.file_path,\n                type: \"audio/mpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }, this), \"Your browser does not support the audio element.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this)]\n          }, song.song_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"JHX0fEIYxUMN4r0tBdiFqZXp7+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Router","Routes","Route","getArtistName","getProfilePic","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","artists","setArtists","songs","setSongs","fetch","then","res","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","song","title","src","artist_id","controls","autoplay","file_path","type","song_id","_c","$RefreshReg$"],"sources":["D:/Documents/online-music-player/client/src/App.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport { Router, Routes, Route } from 'react-router-dom'\nimport './App.css';\nimport getArtistName from './queries/getArtistName';\nimport getProfilePic from './queries/getProfilePic';\n\nfunction App() {\n  const [artists, setArtists] = useState([]);\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/artists\")\n    .then(res => res.json())\n    .then(data => setArtists(data))\n\n    fetch(\"http://localhost:5000/songs\")\n    .then(res => res.json())\n    .then(data => setSongs(data))\n  }\n    ,[]\n  )\n  return (\n    <>\n    <Router>\n      <Routes>\n        Rou\n      </Routes>\n    </Router>\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Songs</h1>\n        <ul>\n        {songs.map((song) => (\n          <li key={song.song_id}>\n            <strong>{song.title}</strong> <br></br>\n            <img src={getProfilePic(artists, song.artist_id)}></img> {getArtistName(artists, song.artist_id)} <br></br>\n            <audio controls autoplay>\n              <source src={song.file_path} type='audio/mpeg'></source>\n              Your browser does not support the audio element.\n            </audio>\n          </li>\n        ))\n\n        }\n      </ul>\n      </header>\n      \n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}