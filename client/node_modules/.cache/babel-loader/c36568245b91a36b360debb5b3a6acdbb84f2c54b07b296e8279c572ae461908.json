{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\online-music-player\\\\client\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  role\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [hasAccess, setHasAccess] = useState(false);\n  useEffect(() => {\n    const checkAccess = async () => {\n      if (currentUser) {\n        const idTokenResult = await currentUser.getIdTokenResult();\n        const userRole = idTokenResult.claims.role;\n        setHasAccess(role ? userRole === role : true);\n      }\n    };\n    checkAccess();\n  });\n  return currentUser ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/log-in\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 37\n  }, this);\n};\n_s(PrivateRoute, \"IhRVw0NmDpIcVOxdgXq0v+PA5ag=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","Navigate","jsxDEV","_jsxDEV","PrivateRoute","children","role","_s","currentUser","hasAccess","setHasAccess","checkAccess","idTokenResult","getIdTokenResult","userRole","claims","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Documents/online-music-player/client/src/components/PrivateRoute.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ children, role }) => {\r\n    const { currentUser} = useContext(AuthContext);\r\n    const [hasAccess, setHasAccess] = useState(false);\r\n\r\n    useEffect( () => {\r\n        const checkAccess = async () => {\r\n            if(currentUser) {\r\n            const idTokenResult = await currentUser.getIdTokenResult();\r\n            const userRole = idTokenResult.claims.role;\r\n            setHasAccess(role ? userRole === role : true);\r\n            }\r\n        }\r\n        checkAccess()\r\n    });\r\n\r\n    return currentUser ? children : <Navigate to=\"/log-in\" />\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAW,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAE,MAAM;IACb,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAGH,WAAW,EAAE;QAChB,MAAMI,aAAa,GAAG,MAAMJ,WAAW,CAACK,gBAAgB,CAAC,CAAC;QAC1D,MAAMC,QAAQ,GAAGF,aAAa,CAACG,MAAM,CAACT,IAAI;QAC1CI,YAAY,CAACJ,IAAI,GAAGQ,QAAQ,KAAKR,IAAI,GAAG,IAAI,CAAC;MAC7C;IACJ,CAAC;IACDK,WAAW,CAAC,CAAC;EACjB,CAAC,CAAC;EAEF,OAAOH,WAAW,GAAGH,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACe,EAAE,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D,CAAC;AAACb,EAAA,CAhBIH,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAkBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}